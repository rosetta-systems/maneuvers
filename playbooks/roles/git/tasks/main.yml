---
- name: Copy SSH Keys
  tags: git
  copy:
    src: "{{ item[0].src }}"
    dest: "/home/{{ item[1] }}/.ssh/{{ item[0].dest }}"
    mode: preserve
    owner: "{{ item[1] }}"
    group: "{{ item[1] }}"
    setype: ssh_home_t
  with_nested:
    - "{{ ssh_key_files }}"
    - "{{ users }}"
  no_log: true

- name: Set Defaults in Git Config
  tags: git
  become: false
  no_log: true
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: core.sshcommand, value: "ssh -i ~/.ssh/github" }
    - { name: user.email, value: "{{ git_email }}" }
    - { name: user.name, value: "rosetta" }

- name: Run Keyscan
  tags: git
  include_role:
    name: keyscan
  vars:
    HOSTNAME: github.com
    KNOWN_HOSTS: ~/.ssh/known_hosts

- name: Clone Repositories
  tags: 
    - git 
    - update-git
  # Becoming root causes issues with key_file
  become: false
  git:
    repo: "{{ item[1].repo }}"
    dest: "/home/{{ item[0] }}{{ item[1].dest }}"
    clone: yes 
    version: "{{ item[1].branch }}"
    single_branch: yes
    key_file: "/home/{{ item[0] }}/.ssh/github"
    ssh_opts: "-o ForwardAgent=yes -o StrictHostKeyChecking=yes"
  with_nested: 
    - "{{ users }}"
    - "{{ github }}"
  ignore_errors: true
  register: clone

# this is only necessary when cloning as root for a workspace
# on a non-production system for a non-jynx user, but a 
# real solution would be cloning as the correct user
#- name: Chown Working Dir
#  tags: git
#  file:
#    state: directory
#    setype: user_home_t
#    owner: "{{ item }}"
#    group: "{{ item }}"
#    path: "/home/{{ item }}/jynx"
#    recurse: true
#  loop: 
#    "{{ users }}"
#  when: clone.changed
  
